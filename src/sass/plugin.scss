// Import core styles
@use '../../node_modules/@tweakpane/core/lib/sass/tp';

// Additional style for the plugin
.#{tp.$prefix}-tmpv {
	// Extend a general input view style
	@extend %tp-input;

	cursor: pointer;
	display: grid;
	grid-template-columns: repeat(10, 1fr);
	grid-template-rows: repeat(auto-fit, 10px);
	height: calc(#{tp.cssVar('container-unit-size')} * 3);
	overflow: hidden;
	position: relative;

	&.#{tp.$prefix}-v-disabled {
		opacity: 0.5;
	}

	&_text {
		// You can use CSS variables for styling. See declarations for details:
		// ../../node_modules/@tweakpane/core/lib/sass/common/_defs.scss
		color: tp.cssVar('input-fg');

		bottom: 2px;
		font-size: 0.9em;
		line-height: 0.9;
		opacity: 0.5;
		position: absolute;
		right: 2px;
	}
	&_dot {
		height: 10px;
		line-height: 10px;
		position: relative;
		text-align: center;

		&::before {
			background-color: tp.cssVar('input-fg');
			content: '';
			border-radius: 1px;
			height: 2px;
			left: 50%;
			margin-left: -1px;
			margin-top: -1px;
			position: absolute;
			top: 50%;
			width: 2px;
		}
	}
	&_frac {
		background-color: tp.cssVar('input-fg');
		border-radius: 1px;
		height: 2px;
		left: 50%;
		margin-top: -1px;
		position: absolute;
		top: 50%;
	}
}

// Styles for the value pairs plugin
.#{tp.$prefix}-valuepairsv {
	@extend %tp-input;
	
	padding: 6px;
	overflow: visible;
	height: auto;
	min-height: auto;
	
	&.#{tp.$prefix}-v-disabled {
		opacity: 0.5;
		pointer-events: none;
	}

	&_list {
		display: flex;
		flex-direction: column;
		gap: 6px;
		overflow: visible;
		width: 100%;
		box-sizing: border-box;
	}

	&_row {
		display: grid;
		grid-template-columns: 1fr 1fr auto;
		gap: 8px;
		align-items: end;
		padding: 8px;
		margin-bottom: 6px;
		background-color: #{rgba(255, 255, 255, 0.02)};
		border: 1px solid #{rgba(255, 255, 255, 0.08)};
		border-radius: 3px;
		transition: background-color 0.15s ease;
		width: 100%;
		box-sizing: border-box;
		position: relative;
		overflow: visible;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.04)};
			border-color: #{rgba(255, 255, 255, 0.12)};
		}
		
		&:last-child {
			margin-bottom: 0;
		}
	}

	&_input-container {
		display: flex;
		flex-direction: column;
		gap: 3px;
		width: 100%;
		box-sizing: border-box;
		position: relative;
	}

	&_label {
		font-size: 0.75em;
		color: tp.cssVar('input-fg');
		opacity: 0.8;
		text-transform: uppercase;
		font-weight: 500;
		letter-spacing: 0.5px;
	}

	&_input {
		@extend %tp-input;
		
		width: 100%;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.75);
		padding: 0 6px;
		font-size: 0.85em;
		border: 1px solid #{rgba(255, 255, 255, 0.1)};
		border-radius: 2px;
		background-color: #{rgba(255, 255, 255, 0.03)};
		color: tp.cssVar('input-fg');
		transition: all 0.15s ease;

		&:focus {
			background-color: #{rgba(255, 255, 255, 0.08)};
			border-color: #{rgba(255, 255, 255, 0.25)};
			outline: none;
			box-shadow: 0 0 0 1px #{rgba(255, 255, 255, 0.1)};
		}

		&:hover {
			border-color: #{rgba(255, 255, 255, 0.15)};
		}
	}

	&_delete-btn {
		width: 24px;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.75);
		padding: 0;
		border: 1px solid #{rgba(255, 80, 80, 0.3)};
		border-radius: 2px;
		background-color: #{rgba(255, 80, 80, 0.1)};
		color: #{rgb(255, 150, 150)};
		cursor: pointer;
		font-size: 12px;
		font-weight: bold;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.15s ease;

		&:hover {
			background-color: #{rgba(255, 80, 80, 0.2)};
			border-color: #{rgba(255, 80, 80, 0.5)};
			color: #{rgb(255, 200, 200)};
			transform: scale(1.05);
		}

		&:active {
			background-color: #{rgba(255, 80, 80, 0.3)};
			transform: scale(0.95);
		}
	}

	&_add-btn {
		@extend %tp-button;
		
		width: 100%;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.85);
		margin-top: 8px;
		font-size: 0.8em;
		border: 1px dashed #{rgba(255, 255, 255, 0.2)};
		background-color: transparent;
		color: tp.cssVar('input-fg');
		cursor: pointer;
		transition: all 0.15s ease;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		font-weight: 500;
		box-sizing: border-box;
		position: relative;
		clear: both;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.05)};
			border-color: #{rgba(255, 255, 255, 0.3)};
			border-style: solid;
			transform: translateY(-1px);
		}

		&:active {
			background-color: #{rgba(255, 255, 255, 0.08)};
			transform: translateY(0);
		}
	}
}

// ValuePair List styling (matching the design)
.tp-vplv {
	@extend %tp-input;
	
	padding: 6px;
	overflow: visible;
	height: auto;
	min-height: auto;
	
	&.tp-v-disabled {
		opacity: 0.5;
		pointer-events: none;
	}

	&_h {
		display: none; // Hide the header for the new design
	}
	
	&_list {
		display: flex;
		flex-direction: column;
		gap: 6px;
		overflow: visible;
		width: 100%;
		box-sizing: border-box;
	}
	
	&_row {
		display: flex;
		align-items: end;
		gap: 8px;
		padding: 8px;
		margin-bottom: 6px;
		background-color: #{rgba(255, 255, 255, 0.02)};
		border: 1px solid #{rgba(255, 255, 255, 0.08)};
		border-radius: 3px;
		transition: background-color 0.15s ease;
		width: 100%;
		box-sizing: border-box;
		position: relative;
		overflow: visible;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.04)};
			border-color: #{rgba(255, 255, 255, 0.12)};
		}
		
		&:last-child {
			margin-bottom: 0;
		}
	}

	&_pair-wrapper {
		flex: 1;
		display: flex;
		flex-direction: column;
		gap: 3px;
	}

	&_labels {
		display: flex;
		gap: 8px;
	}

	&_label {
		flex: 1;
		font-size: 0.75em;
		color: tp.cssVar('input-fg');
		opacity: 0.8;
		text-transform: uppercase;
		font-weight: 500;
		letter-spacing: 0.5px;
		text-align: center;
	}

	// Style the original ValuePair view inside the wrapper
	&_pair-wrapper .tp-vpv {
		width: 100%;
		
		.tp-vpv_t {
			width: 100%;
			
			.tp-pndtxtv {
				width: 100%;
				// Keep all original Tweakpane styling for the point-nd text view
			}
		}
	}
	
	&_remove {
		width: 24px;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.75);
		padding: 0;
		border: 1px solid #{rgba(255, 80, 80, 0.3)};
		border-radius: 2px;
		background-color: #{rgba(255, 80, 80, 0.1)};
		color: #{rgb(255, 150, 150)};
		cursor: pointer;
		font-size: 12px;
		font-weight: bold;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.15s ease;

		&:hover {
			background-color: #{rgba(255, 80, 80, 0.2)};
			border-color: #{rgba(255, 80, 80, 0.5)};
			color: #{rgb(255, 200, 200)};
			transform: scale(1.05);
		}

		&:active {
			background-color: #{rgba(255, 80, 80, 0.3)};
			transform: scale(0.95);
		}
	}
	
	&_add {
		@extend %tp-button;
		
		width: 100%;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.85);
		margin-top: 8px;
		font-size: 0.8em;
		border: 1px dashed #{rgba(255, 255, 255, 0.2)};
		background-color: transparent;
		color: tp.cssVar('input-fg');
		cursor: pointer;
		transition: all 0.15s ease;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		font-weight: 500;
		box-sizing: border-box;
		position: relative;
		clear: both;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.05)};
			border-color: #{rgba(255, 255, 255, 0.3)};
			border-style: solid;
			transform: translateY(-1px);
		}

		&:active {
			background-color: #{rgba(255, 255, 255, 0.08)};
			transform: translateY(0);
		}
	}
}

// ValuePair single styling (updated for new design)
.tp-vpv {
	&_t {
		display: flex;
		
		.tp-pndtxtv {
			flex: 1;
		}
	}
}

// String List Plugin styling
.tp-slv {
	@extend %tp-input;
	
	padding: 6px;
	overflow: visible;
	height: auto;
	min-height: auto;
	
	&.tp-v-disabled {
		opacity: 0.5;
		pointer-events: none;
	}

	&_h {
		display: none; // Hide the header for consistency with value pairs
	}
	
	&_list {
		display: flex;
		flex-direction: column;
		gap: 6px;
		overflow: visible;
		width: 100%;
		box-sizing: border-box;
	}
	
	&_row {
		display: flex;
		align-items: end;
		gap: 8px;
		padding: 8px;
		margin-bottom: 6px;
		background-color: #{rgba(255, 255, 255, 0.02)};
		border: 1px solid #{rgba(255, 255, 255, 0.08)};
		border-radius: 3px;
		transition: background-color 0.15s ease;
		width: 100%;
		box-sizing: border-box;
		position: relative;
		overflow: visible;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.04)};
			border-color: #{rgba(255, 255, 255, 0.12)};
		}
		
		&:last-child {
			margin-bottom: 0;
		}
	}

	&_string-wrapper {
		flex: 1;
		display: flex;
		align-items: center;
	}

	// Style the string item view inside the wrapper
	&_string-wrapper .tp-siv {
		width: 100%;
		
		&_t {
			width: 100%;
			
			.tp-txtv {
				width: 100%;
			}
		}
	}
	
	&_remove {
		width: 24px;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.75);
		padding: 0;
		border: 1px solid #{rgba(255, 80, 80, 0.3)};
		border-radius: 2px;
		background-color: #{rgba(255, 80, 80, 0.1)};
		color: #{rgb(255, 150, 150)};
		cursor: pointer;
		font-size: 12px;
		font-weight: bold;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.15s ease;

		&:hover {
			background-color: #{rgba(255, 80, 80, 0.2)};
			border-color: #{rgba(255, 80, 80, 0.5)};
			color: #{rgb(255, 200, 200)};
			transform: scale(1.05);
		}

		&:active {
			background-color: #{rgba(255, 80, 80, 0.3)};
			transform: scale(0.95);
		}
	}
	
	&_add {
		@extend %tp-button;
		
		width: 100%;
		height: calc(#{tp.cssVar('container-unit-size')} * 0.85);
		margin-top: 8px;
		font-size: 0.8em;
		border: 1px dashed #{rgba(255, 255, 255, 0.2)};
		background-color: transparent;
		color: tp.cssVar('input-fg');
		cursor: pointer;
		transition: all 0.15s ease;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		font-weight: 500;
		box-sizing: border-box;
		position: relative;
		clear: both;

		&:hover {
			background-color: #{rgba(255, 255, 255, 0.05)};
			border-color: #{rgba(255, 255, 255, 0.3)};
			border-style: solid;
			transform: translateY(-1px);
		}

		&:active {
			background-color: #{rgba(255, 255, 255, 0.08)};
			transform: translateY(0);
		}
	}
}

// String Item View styling
.tp-siv {
	&_t {
		display: flex;
		
		.tp-txtv {
			flex: 1;
		}
	}
}